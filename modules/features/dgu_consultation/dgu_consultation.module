<?php
/**
 * @file
 * Code for the DGU Consultation feature.
 */

include_once 'dgu_consultation.features.inc';

/**
 *  Implements hook_theme_registry_alter().
 */
function dgu_consultation_theme_registry_alter(&$theme_registry) {
  $theme_registry['book_navigation']['preprocess functions'] = array(
    0 => 'dgu_consultation_preprocess_book_navigation'
  );
}

function dgu_consultation_preprocess_book_navigation(&$variables){
  $parent_book = node_load($variables['book_link']['bid']);
  $variables['parent_book_title'] = $parent_book->title;
  $book_link = $variables['book_link'];

  // Provide extra variables for themers. Not needed by default.
  $variables['book_id'] = $book_link['bid'];
  $variables['book_title'] = check_plain($parent_book->title);
  $variables['book_url'] = 'node/' . $book_link['bid'];
  $variables['current_depth'] = $book_link['depth'];
  $variables['tree'] = '';
  $tree = menu_tree_all_data(book_menu_name($book_link['bid']));
  //$top_item = array_shift($tree);
  $index = array();

  _dgu_consultation_build_index($tree, $index, $book_link['mlid']);
  $variables['tree'] = "<pre> " . print_r($index, true) . "</pre>";

}

function _dgu_consultation_get_link_nid($link){
  $parts = explode('/', $link['link_path']);
  return $parts[1];
}

function _dgu_consultation_build_index($tree, &$index, $current_mlid, $depth_limit = null, $section = ''){
  $subsection = 1;
  if (!empty($section)){
    $section .= '.';
  }
  foreach ($tree as $data) {

    //Optionally limit the depth
    if ($depth_limit && $data['link']['depth'] > $depth_limit) {
      break;
    }
    $index[$data['link']['mlid']] = array(
      'title' => $data['link']['link_title'],
      'nid' => _dgu_consultation_get_link_nid($data['link']),
      'section' => $section . $subsection++,
      'selected' => $current_mlid == $data['link']['mlid'],
    );
    $paragraph = 1;
    $index[$data['link']['mlid']]['paragraphs'] = dgu_consultation_build_paragraph($data['link'], $index[$data['link']['mlid']]['section'], $paragraph); //truncate_utf8($data['link']['title'], 30, TRUE, TRUE);
    if ($data['below']) {
      $index[$data['link']['mlid']]['subsections'] = array();
      _dgu_consultation_build_index($data['below'], $index[$data['link']['mlid']]['subsections'], $current_mlid, $depth_limit, $section);
    }
  }
}

/**
 *  Implements hook_drupal_goto_alter().
 */
function dgu_consultation_build_paragraph($link, $section, &$paragraph){
  $book_page = node_load(_dgu_consultation_get_link_nid($link));
  $paras = array();
  if (!empty($section)){
    $section .= '.';
  }
  foreach ( $book_page->field_paragraph[LANGUAGE_NONE] as $para) {
    $paras[] = array(
      'section' => $section . $paragraph++,
      'title' => truncate_utf8(strip_tags($para['safe_value']), 30, TRUE, TRUE),
    );

  }

  return $paras;
}
